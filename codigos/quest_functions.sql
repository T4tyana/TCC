/*CONSULTAS*/
/*FUNÇÕES*/
--QUAIS IMAGENS ESTÃO EM DETERMINADA ESCALA?   ---OK--- 
CREATE OR REPLACE FUNCTION efoto.EscaleFromImage(ESCALE INTEGER)
RETURNS TABLE(Id bigint, name_ character varying) AS
$$
SELECT DISTINCT P.ID, P.NAME_
FROM EFOTO.PROJECT P
LEFT JOIN EFOTO.BLOCK B
ON  P.ID = B.ID_PROJ
LEFT JOIN EFOTO.IMG_BLOCK IB
ON B.ID=IB.ID_BLOCK
LEFT JOIN EFOTO.IMAGE I
ON IB.ID_IMG=I.ID
LEFT JOIN EFOTO.SENSOR S
ON S.ID=I.ID_SENSOR
LEFT JOIN EFOTO.FLIGHT F
ON S.ID = F.ID_SENSOR
LEFT JOIN EFOTO.PARAM_FLIGHT PF
ON F.ID = PF.ID_FLIGHT
WHERE DEN_ESCALE = ESCALE;
$$ LANGUAGE 'sql';
--QUAIS IMAGENS SÃO PROVENIENTES DE CAMERAS DIGITAIS? ---OK---
CREATE OR REPLACE FUNCTION EFOTO.IMAGEKIND(DET TEXT)
RETURNS TABLE (ID INTEGER, NAME_ VARCHAR) AS
$$
SELECT I.ID, I.NAME_
FROM EFOTO.Image I
INNER JOIN EFOTO.SENSOR S
ON I.ID_SENSOR = S.ID
INNER JOIN EFOTO.SPECIFICATION SS
ON S.ID_SPEC =  SS.ID
WHERE SS.DETECTOR::TEXT = DET;
$$ LANGUAGE 'sql';
--QUAL AEROLEVANTAMENTO GEROU QUAL IMAGEM? ---ok---
create or replace function efoto.ImagesOfProject(FLY bigint)
RETURNS TABLE (flight_id bigint, image_id int, img_name varchar) as
$$
SELECT f.id, i.id, i.name_
from
EFOTO.Image I
JOIN EFOTO.SENSOR S
ON S.ID = I.Id_sensor
JOIN EFOTO.FLIGHT F
ON F.ID_SENSOR =S.ID
where F.ID = FLY;
$$ language 'sql';
--QUAIS SÃO OS PONTOS E COORDENADAS DE DADO PROJETO? >>>>>>FUNÇÃO ---ok----
CREATE OR REPLACE FUNCTION efoto.Projectpointscoord(pid bigint)
RETURNS TABLE(id bigint, Coord text, name character varying) AS
$$
SELECT P.ID, ST_AsText(ST_Transform(CAST(P.geom As geometry),32723)) as coord, PR.NAME_
FROM EFOTO.PROJECT PR
JOIN EFOTO.POINT_PROJECT PP
ON PR.ID=PP.ID_PROJ
JOIN EFOTO.POINT P
ON PP.ID_POINT=P.ID
WHERE PR.id = pid;
$$language 'sql';

--PONTOS DENTRO DE UM POLIGONO: documentar que a geometria precisa ser fornecida como texto no formato WKT ---OK---
CREATE OR REPLACE FUNCTION EFOTO.SEARCHPOINTSFROMGEOMETRY(WKT TEXT)
RETURNS TABLE (ID BIGINT, POINT TEXT) AS
$$
SELECT P.ID, ST_AsText(ST_Transform(CAST(P.geom As geometry),32723))
FROM EFOTO.POINT P
WHERE ST_CONTAINS (ST_Transform(ST_GeomFromText(WKT,32723),4326),CAST(P.geom As geometry));
$$ LANGUAGE 'sql';
